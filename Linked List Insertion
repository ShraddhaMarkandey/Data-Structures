#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};
void traverseLinkedList(struct node *ptr)
{
    while(ptr!=NULL)
    {
        printf("Element: %d\n",ptr->data);
        ptr=ptr->next;
    }
}
struct node* insertionAtFirst(struct node *head,int val)
{
    struct node *ptr=(struct node*)malloc(sizeof(struct node*));
    ptr->data=val;
    ptr->next=head;
    head=ptr;
    return head;
}
struct node* insertAtIndex(struct node *head,int val,int index)
{
    struct node *ptr=(struct node*)malloc(sizeof(struct node*));
    struct node *p=head;
    int i=0;
    while(i!=index-1)
    {
        p=p->next;
        i++;
    }
    ptr->data=val;
    ptr->next=p->next;
    p->next=ptr;
    return head;
}
struct node* insertAtEnd(struct node *head,int val)
{
    struct node *ptr=(struct node*)malloc(sizeof(struct node*));
    struct node *p=head;
    while(p->next!=NULL)
    {
        p=p->next;
    }
    ptr->data=val;
    ptr->next=NULL;
    p->next=ptr;
    return head;
}
struct node* insertAfterNode(struct node* head,struct node* prevNode,int val)
{
    struct node* ptr=(struct node*)malloc(sizeof(struct node*));
    ptr->data=val;
    ptr->next=prevNode->next;
    prevNode->next=ptr;
    return head;
}
int main()
{
    struct node *head,*second,*third,*fourth;
    head=(struct node*)malloc(sizeof(struct node));
    second=(struct node*)malloc(sizeof(struct node));
    third=(struct node*)malloc(sizeof(struct node));
    fourth=(struct node*)malloc(sizeof(struct node));
    head->data=1;
    head->next=second;
    second->data=2;
    second->next=third;
    third->data=3;
    third->next=fourth;
    fourth->data=4;
    fourth->next=NULL;
    //traverseLinkedList(head);
    //head=insertionAtFirst(head,10);
    //traverseLinkedList(head);
    //head=insertAtIndex(head,30,1);
    //traverseLinkedList(head);
    //head=insertAtEnd(head,50);
    //traverseLinkedList(head);
    head=insertAfterNode(head,third,25);
    traverseLinkedList(head);
    return 0;
}
